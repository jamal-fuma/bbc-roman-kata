// Generated by CoffeeScript 1.3.3
(function() {
  var test_LM_equals_900, test_MMMCMXCIV_equals_3994, test_MMMCMXCIX_equals_3999, test_MMMCMXCVIII_equals_3998, test_MMMCMXCVII_equals_3997, test_MMMCMXCVI_equals_3996, test_MMMCMXCV_equals_3995, test_c_equals_100, test_c_equals_1000, test_c_equals_500, test_i_is_1, test_ii_equals_2, test_iii_equals_3, test_iv_equals_4, test_ix_equals_40, test_ix_equals_400, test_ix_equals_9, test_ix_equals_90, test_restrictions_are_enforced_on_input_range, test_v_equals_5, test_vi_equals_6, test_vii_equals_7, test_viii_equals_8, test_x_equals_10, test_x_equals_50, test_xi_equals_11, tests;

  test_restrictions_are_enforced_on_input_range = function() {
    var input, inputs, test_callback, _i, _len, _results;
    inputs = [0, -1, -2, 4000, 4001, 5000];
    _results = [];
    for (_i = 0, _len = inputs.length; _i < _len; _i++) {
      input = inputs[_i];
      test_callback = function() {
        return romanNumeralGenerator(input);
      };
      _results.push(assertException(test_callback, "Error"));
    }
    return _results;
  };

  test_i_is_1 = function() {
    return assertEquals("I", romanNumeralGenerator(1));
  };

  test_ii_equals_2 = function() {
    return assertEquals("II", romanNumeralGenerator(2));
  };

  test_iii_equals_3 = function() {
    return assertEquals("III", romanNumeralGenerator(3));
  };

  test_iv_equals_4 = function() {
    return assertEquals("IV", romanNumeralGenerator(4));
  };

  test_v_equals_5 = function() {
    return assertEquals("V", romanNumeralGenerator(5));
  };

  test_ix_equals_9 = function() {
    return assertEquals("IX", romanNumeralGenerator(9));
  };

  test_x_equals_10 = function() {
    return assertEquals("X", romanNumeralGenerator(10));
  };

  test_ix_equals_40 = function() {
    return assertEquals("XL", romanNumeralGenerator(40));
  };

  test_x_equals_50 = function() {
    return assertEquals("L", romanNumeralGenerator(50));
  };

  test_ix_equals_90 = function() {
    return assertEquals("XC", romanNumeralGenerator(90));
  };

  test_c_equals_100 = function() {
    return assertEquals("C", romanNumeralGenerator(100));
  };

  test_ix_equals_400 = function() {
    return assertEquals("CD", romanNumeralGenerator(400));
  };

  test_c_equals_500 = function() {
    return assertEquals("D", romanNumeralGenerator(500));
  };

  test_LM_equals_900 = function() {
    return assertEquals("CM", romanNumeralGenerator(900));
  };

  test_c_equals_1000 = function() {
    return assertEquals("M", romanNumeralGenerator(1000));
  };

  test_vi_equals_6 = function() {
    return assertEquals("VI", romanNumeralGenerator(6));
  };

  test_vii_equals_7 = function() {
    return assertEquals("VII", romanNumeralGenerator(7));
  };

  test_viii_equals_8 = function() {
    return assertEquals("VIII", romanNumeralGenerator(8));
  };

  test_xi_equals_11 = function() {
    return assertEquals("XI", romanNumeralGenerator(11));
  };

  test_MMMCMXCIX_equals_3999 = function() {
    return assertEquals("MMMCMXCIX", romanNumeralGenerator(3999));
  };

  test_MMMCMXCVIII_equals_3998 = function() {
    return assertEquals("MMMCMXCVIII", romanNumeralGenerator(3998));
  };

  test_MMMCMXCVII_equals_3997 = function() {
    return assertEquals("MMMCMXCVII", romanNumeralGenerator(3997));
  };

  test_MMMCMXCVI_equals_3996 = function() {
    return assertEquals("MMMCMXCVI", romanNumeralGenerator(3996));
  };

  test_MMMCMXCV_equals_3995 = function() {
    return assertEquals("MMMCMXCV", romanNumeralGenerator(3995));
  };

  test_MMMCMXCIV_equals_3994 = function() {
    return assertEquals("MMMCMXCIV", romanNumeralGenerator(3994));
  };

  tests = {
    "test_restrictions_are_enforced_on_input_range": test_restrictions_are_enforced_on_input_range,
    "test_i_is_1": test_i_is_1,
    "test_ii_equals_2": test_ii_equals_2,
    "test_iii_equals_3": test_iii_equals_3,
    "test_iv_equals_4": test_iv_equals_4,
    "test_v_equals_5": test_v_equals_5,
    "test_ix_equals_9": test_ix_equals_9,
    "test_x_equals_10": test_x_equals_10,
    "test_ix_equals_40": test_ix_equals_40,
    "test_x_equals_50": test_x_equals_50,
    "test_ix_equals_90": test_ix_equals_90,
    "test_c_equals_100": test_c_equals_100,
    "test_ix_equals_400": test_ix_equals_400,
    "test_c_equals_500": test_c_equals_500,
    "test_LM_equals_900": test_LM_equals_900,
    "test_c_equals_1000": test_c_equals_1000,
    "test_vi_equals_6": test_vi_equals_6,
    "test_vii_equals_7": test_vii_equals_7,
    "test_viii_equals_8": test_viii_equals_8,
    "test_xi_equals_11": test_xi_equals_11,
    "test_MMMCMXCIX_equals_3999": test_MMMCMXCIX_equals_3999,
    "test_MMMCMXCVIII_equals_3998": test_MMMCMXCVIII_equals_3998,
    "test_MMMCMXCVII_equals_3997": test_MMMCMXCVII_equals_3997,
    "test_MMMCMXCVI_equals_3996": test_MMMCMXCVI_equals_3996,
    "test_MMMCMXCV_equals_3995": test_MMMCMXCV_equals_3995,
    "test_MMMCMXCIV_equals_3994": test_MMMCMXCIV_equals_3994
  };

  TestCase("tests for roman numerals kata", tests);

}).call(this);
